{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chatroom/chatroom.component.html","webpack:///./src/app/chatroom/chatroom.component.scss","webpack:///./src/app/chatroom/chatroom.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/websocket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-chatroom></app-chatroom>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-chat-room';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatroomComponent } from './chatroom/chatroom.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatroomComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    ChatroomComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<html>\\n<body>\\n    <div class='container-fluid'>\\n        <div class='card' id='title'>\\n            <div class='card-body'>\\n                <h2 class='card-text'>Chat Application</h2>\\n            </div>\\n        </div>\\n        <div class='row'>\\n                <div class='col-4'>\\n                        <div class='card' id='userBox'>\\n                                <div class='card-body'>\\n                                    <h3 class='card-text' id='activeUsers'>Active Users</h3>\\n                                    <p *ngFor='let user of userList'><b>{{user.username}}</b></p>\\n                                </div>\\n                            </div> \\n                </div>\\n                <div class='col-8'>\\n                        <div class='card' id='textBox'>\\n                                <div class='card-body'>\\n                                    <p *ngFor='let msg of messageList'><b>{{msg.user.username}}: </b>{{msg.message}}</p>\\n                                </div> \\n                            </div>\\n                            <div>\\n                                <input class='form-control' id='searchBox' [(ngModel)]='messageText' placeholder=\\\"What would you like to say?\\\" (keyup.enter)='onEnter()'> \\n                            </div>  \\n                </div>\\n            </div>\\n    </div>\\n\\n</body>\\n</html>\\n\"","module.exports = \"#title {\\n  margin: 10px 0 10px 0; }\\n\\n#activeUsers {\\n  border-bottom: 1px solid black;\\n  padding-bottom: 5px; }\\n\\n#userBox {\\n  height: 450px;\\n  overflow: auto; }\\n\\n#textBox {\\n  height: 400px;\\n  overflow: auto; }\\n\\n#searchBox {\\n  margin: 10px 0 10px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdHJvb20vRDpcXE1hc3Rlcm1pbmRcXENoYXQtcm9vbVxcYW5ndWxhci9zcmNcXGFwcFxcY2hhdHJvb21cXGNoYXRyb29tLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQXFCLEVBQUE7O0FBVXpCO0VBQ0ksOEJBQThCO0VBQzlCLG1CQUFtQixFQUFBOztBQUV2QjtFQUNJLGFBQWE7RUFDYixjQUNKLEVBQUE7O0FBRUE7RUFDSSxhQUFhO0VBQ2IsY0FDSixFQUFBOztBQUNBO0VBQ0kscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jaGF0cm9vbS9jaGF0cm9vbS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiN0aXRsZSB7XG4gICAgbWFyZ2luOiAxMHB4IDAgMTBweCAwO1xufVxuLy8gI3VzZXJCb3gge1xuLy8gICAgIGhlaWdodDogNzAwcHg7XG4vLyB9XG5cbi8vICN0ZXh0Qm94IHtcbi8vICAgICBoZWlnaHQ6IDY1MHB4O1xuLy8gfVxuXG4jYWN0aXZlVXNlcnMge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xufVxuI3VzZXJCb3gge1xuICAgIGhlaWdodDogNDUwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG9cbn1cblxuI3RleHRCb3gge1xuICAgIGhlaWdodDogNDAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG9cbn1cbiNzZWFyY2hCb3gge1xuICAgIG1hcmdpbjogMTBweCAwIDEwcHggMDtcbn0iXX0= */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { WebsocketService } from '../websocket.service';\n  \n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.scss']\n})\nexport class ChatroomComponent implements OnInit, AfterViewInit {\n\n  messageText: string;\n  username: string;\n  messageList: Object;\n  userList: Object;\n  newMessage: Object;\n  container: HTMLElement;\n\n  constructor(private data: DataService, private web: WebsocketService) { }\n\n  ngOnInit() {\n    //probably some message box asking you to login\n\n    this.data.socket_messages().subscribe(message => {\n      this.messageList = message;\n    })\n\n    this.data.message_list().subscribe(data => {\n      this.messageList = data;\n    }); \n\n    this.data.user_list().subscribe(data => {\n      this.userList = data;\n    });    \n  }\n\n  ngAfterViewInit() {         \n    this.container = document.getElementById(\"textBox\");           \n    this.container.scrollTop = this.container.scrollHeight;     \n  }  \n  \n  onEnter(){\n    const message = {\n        user: {\n        user_id:4\n      },\n      message: this.messageText\n    }\n\n    this.data.write_message(message).subscribe(data => {\n      console.log('post request success!');\n    });\n    this.data.send_message(this.messageList)\n    this.messageText =\"\";\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private url = 'http://localhost:8000';\n  private socket: SocketIOClient.Socket;\n\n  constructor(private http: HttpClient) { \n    this.socket = io(this.url);\n  }\n\n  write_message(message) {\n    return this.http.post('/messages', message)\n  }\n\n  send_message(message) {\n    this.socket.emit('message', message);\n  }\n\n  // socket_messages = () => {\n  //   return Observable.create((observer)=> {\n  //     this.socket.on('message', (message) => {\n  //       observer.next(message);\n  //     });\n  //   });\n  // }\n\n  socket_messages = () => {\n    return Observable.create((observer)=> {\n      this.socket.on('message', (message) => {\n        observer.next(message);\n      });\n    });\n  }\n\n  message_list() {\n    return this.http.get('/messages');\n  }\n\n  user_list() {\n    return this.http.get('/users');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n  \n  private url = 'http://localhost:8000';\n  private socket: SocketIOClient.Socket;\n  \n  constructor() {\n    this.socket = io(this.url);\n   }\n\n  // socketStart() {\n  //   this.socket.on('message', (res) => {\n  //     return res;\n  //   });\n  // }\n\n  sendMessage(message){\n    this.socket.emit('message', message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}